version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    networks:
      - n8n-network
      - default
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    container_name: n8n
    image: docker.n8n.io/n8nio/n8n
    environment:
      - WEBHOOK_URL=${URL}
      - TZ=${TIMEZONE}
      - GENERIC_TIMEZONE=${TIMEZONE}
      - OLLAMA_HOST=ollama:11434
    ports:
      - "5678:5678"
    networks:
      - n8n-network
      - default
    volumes:
      - n8n_data:/home/node/.n8n

  ngrok:
    container_name: ngrok
    image: ngrok/ngrok:latest
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    networks:
      - n8n-network
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml

  ollama:
    container_name: ollama
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    networks:
      - n8n-network
      - default
    volumes:
      - ollama-local:/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

volumes:
  ollama-local:
  n8n_data:
  postgres_storage:

networks:
  n8n-network:
    driver: bridge
  default:
